openapi: 3.0.1
info:
  title: EasyConf Reviews Microservice
  description: "EasyConf is web-based conference management system, designed to organize\
    \ and administrate academic conferences, workshops, and events. It offers a platform\
    \ for authors, reviewers, and organizers (chairs) to handle paper submissions,\
    \ peer reviews, and program scheduling efficiently. It provides tools for managing\
    \ the review process, generating program schedules, and handling communication\
    \ between organizers and participants.\n\nThe Reviews Microservice handles the\
    \ process of reviewing papers before a conference. This microservice is responsible\
    \ for assigning papers to reviews, allowing reviewers to add their comments, and\
    \ allowing the PC chairs to finalize the decision about acceptance and rejection\
    \ of the submitted papers.\n\nThe different roles that the users can have are\
    \ specified in the Users Microservice and the process for submitting papers to\
    \ conferences is specified in the Submissions Microservice.\n\nTECHNICAL NOTE:\
    \ in every endpoint, we require the requesting user to provide their ID. I.e.,\
    \ the requesterID parameter must be provided. It is used for authentication in\
    \ order to check if the user is allowed to perform certain actions."
  version: 0.0.1-SNAPSHOT
servers:
- url: http://localhost:8080
  description: Generated server url
tags:
- name: Conference Tracks
  description: "Operations for dealing with conference tracks: analytics, deadlines\
    \ and the review phase"
- name: Assignments
  description: Operations for assigning reviewers to papers.
- name: Papers
  description: "Operations for viewing papers: their contents, review status, etc."
- name: Bids
  description: "Operations for bidding on papers, before the reviews are assigned"
- name: Reviews
  description: "Operations to deal with reviews: reading them, submitting, commenting,\
    \ etc"
paths:
  /papers/{paperID}/reviews:
    put:
      tags:
      - Reviews
      summary: Submit (or edit) a review
      description: "The requester submits (or resubmits) a review to a specific paper.\
        \ Once all the reviewers for a paper have submitted a review for that paper,\
        \ the Discussion phase for that paper begins and reviewers can see each others\
        \ reviews and write comments on them. "
      operationId: submit
      parameters:
      - name: requesterID
        in: query
        description: The ID of a user making the request
        required: true
        schema:
          type: integer
          format: int64
      - name: paperID
        in: path
        description: The ID of a paper that the review is submitted for
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Review'
        required: true
      responses:
        "500":
          description: Internal Server Error. An unexpected server error occurred.
        "403":
          description: 'Forbidden. The requester must be a reviewer assigned to the
            given paper. '
        "404":
          description: Not Found. The requested paper or reviewer was not found.
        "200":
          description: Review successfully submitted
  /papers/{paperID}/bids:
    get:
      tags:
      - Bids
      summary: Get all bids for a given paper
      description: Responds with a list of bids and the IDs of the corresponding reviewers.
        The requester must be a chair of the track that the paper is in.
      operationId: getBidsForPaper
      parameters:
      - name: requesterID
        in: query
        description: The ID of a user making the request
        required: true
        schema:
          type: integer
          format: int64
      - name: paperID
        in: path
        description: The ID of a paper to return
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: "Not found, the specified paper does not exist."
        "500":
          description: Internal Server Error. An unexpected server error occurred.
        "200":
          description: Successfully accessed the bids for paper
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BidByReviewer'
        "403":
          description: "Forbidden, you are not allowed to view bids. The requester\
            \ must be a chair of the track."
    put:
      tags:
      - Bids
      summary: Bid on a paper
      description: "Saves the preference (based on expertise) of the requester in\
        \ regards to reviewing the given paper. The requester must be a reviewer of\
        \ the track the paper is in. Also, the submission deadline has to have passed\
        \ and the bidding deadline must not have passed."
      operationId: bid
      parameters:
      - name: requesterID
        in: query
        description: The ID of a user making the request
        required: true
        schema:
          type: integer
          format: int64
      - name: paperID
        in: path
        description: The ID of the paper
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
              description: Specifies a preference by the reviewer to review / not
                review a paper (based on their expertise)
              enum:
              - CAN_REVIEW
              - NEUTRAL
              - NOT_REVIEW
        required: true
      responses:
        "404":
          description: Not Found. The requested paper or track was not found.
        "500":
          description: Internal Server Error. An unexpected server error occurred.
        "409":
          description: Conflict. The submission deadline must have passed. The bidding
            deadline must not have passed.
        "200":
          description: Successful bid on the paper
        "403":
          description: Forbidden. The requester must be a reviewer in the track the
            paper is in.
  /conferences/{conferenceID}/tracks/{trackID}/bidding-deadline:
    get:
      tags:
      - Conference Tracks
      summary: Get the bidding deadline
      description: "Responds with the bidding deadline for the given track. If the\
        \ deadline hasn't been set, it will automatically be set to a few days after\
        \ the submission deadline for the track. Once the bidding deadline passes,\
        \ the bidding phase of the track automatically ends and the review assignments\
        \ phase begins."
      operationId: getBiddingDeadline
      parameters:
      - name: requesterID
        in: query
        description: The ID of a user making the request
        required: true
        schema:
          type: integer
          format: int64
      - name: conferenceID
        in: path
        description: The ID of a conference
        required: true
        schema:
          type: integer
          format: int64
      - name: trackID
        in: path
        description: The ID of a track
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "500":
          description: Internal Server Error. An unexpected server error occurred.
        "200":
          description: Successful pull of the bidding deadline
          content:
            application/json:
              schema:
                type: string
                format: date-time
        "403":
          description: "Forbidden. The requester must be a chair of the track, or\
            \ a reviewer in the track."
        "404":
          description: Not Found. The requested track or conference were not found.
    put:
      tags:
      - Conference Tracks
      summary: Changes the bidding deadline
      description: "Changes the bidding deadline to the one provided in the body.\
        \ If the deadline isn't set, it will automatically be set to a few days after\
        \ the submission deadline for the track. Once the bidding deadline passes,\
        \ the bidding phase of the track automatically ends and the review assignments\
        \ phase begins."
      operationId: setBiddingDeadline
      parameters:
      - name: requesterID
        in: query
        description: The ID of a user making the request
        required: true
        schema:
          type: integer
          format: int64
      - name: conferenceID
        in: path
        description: The ID of a conference
        required: true
        schema:
          type: integer
          format: int64
      - name: trackID
        in: path
        description: The ID of a track
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
              description: The date for the deadline of the bid
              format: date-time
        required: true
      responses:
        "409":
          description: "Conflict. An invalid bidding deadline was given, or the old\
            \ bidding deadline has already passed. The new given bidding deadline,\
            \ must also not have passed already."
        "500":
          description: Internal Server Error. An unexpected server error occurred.
        "403":
          description: Forbidden. The requester must be a chair of the track.
        "200":
          description: Success.
        "404":
          description: Not Found. The requested track or conference were not found.
  /conferences/{conferenceID}/tracks/{trackID}/automatic:
    put:
      tags:
      - Assignments
      summary: Automatically assign the reviewers
      description: "Automatically assigns a reviewer to a specific paper. At least\
        \ 3 reviewers will be assigned to each paper (taking into account the manual\
        \ assignments as well), such that each reviewer in the track has a similar\
        \ amount of reviews assigned to them."
      operationId: assignAuto
      parameters:
      - name: requesterID
        in: query
        description: The ID of the user making the request
        required: true
        schema:
          type: integer
          format: int64
      - name: conferenceID
        in: path
        description: The ID of the conference the track belongs to
        required: true
        schema:
          type: integer
          format: int64
      - name: trackID
        in: path
        description: The ID of the track for which to do the automatic assignment
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Reviewers successfully assigned to the track.
        "500":
          description: Internal Server Error. An unexpected server error occurred.
        "409":
          description: Conflict. Automatic assignment not possible. There must be
            at least one reviewer in the track.
        "403":
          description: Forbidden. You are not allowed to assign reviewers. Only the
            chairs for tracks are allowed.
        "404":
          description: Not Found. The specified track or user does not exist.
  /papers/{paperID}/reviews/finalization:
    post:
      tags:
      - Reviews
      summary: End the discussion phase for a paper
      description: "The paper is now considered reviewed: the reviews cannot be changed.\
        \ Once all of the papers in a track are reviewed, the track automatically\
        \ goes to the FINAL phase."
      operationId: finalization
      parameters:
      - name: requesterID
        in: query
        description: The ID of a user making the request
        required: true
        schema:
          type: integer
          format: int64
      - name: paperID
        in: path
        description: The ID of a paper to finalize the reviews for
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "409":
          description: Conflict. The paper must be in its Discussion phase and all
            of the reviews need to either be positive or negative. Only then can they
            be finalized.
        "500":
          description: Internal Server Error. An unexpected server error occurred.
        "200":
          description: Successful finalization of the discussion phase
        "403":
          description: Forbidden. The requester must be a chair of the track the paper
            is in.
        "404":
          description: Not Found. The requested paper was not found.
  /papers/{paperID}/reviews/by-reviewer/{reviewerID}/discussion-comments:
    get:
      tags:
      - Reviews
      summary: Gets the discussion comments
      description: "Responds with all the discussion comments for a paper. Discussion\
        \ comments are comments that can be left on reviews during the Discussion\
        \ phase. These comments will not be revealed to authors. The requester must\
        \ be a chair of the track that the paper is in, or a reviewer also assigned\
        \ to the given paper. Once posted, these comments cannot be edited or deleted."
      operationId: getDiscussionComments
      parameters:
      - name: requesterID
        in: query
        description: The ID of the user making the request.
        required: true
        schema:
          type: integer
          format: int64
      - name: reviewerID
        in: path
        description: The ID of a reviewer in charge of this paper
        required: true
        schema:
          type: integer
          format: int64
      - name: paperID
        in: path
        description: The ID of a paper to get the comments from
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DiscussionComment'
        "500":
          description: Internal Server Error. An unexpected server error occurred.
        "404":
          description: Not Found. The requested paper or reviewer was not found.
        "403":
          description: Forbidden. The requester is not a valid chair or reviewer.
    post:
      tags:
      - Reviews
      summary: Posts a discussion comment
      description: "Posts a discussion comment for a review of a specific paper using\
        \ userID and reviewerID. Discussion comments are comments that can be left\
        \ on reviews during the Discussion phase. These comments will not be revealed\
        \ to authors. The requester must be a chair of the track that the paper is\
        \ in, or a reviewer also assigned to the given paper. Once posted, these comments\
        \ cannot be edited or deleted."
      operationId: submitConfidentialComment
      parameters:
      - name: requesterID
        in: query
        description: The ID of a user making the request
        required: true
        schema:
          type: integer
          format: int64
      - name: reviewerID
        in: path
        description: The ID of a reviewer in charge of this paper
        required: true
        schema:
          type: integer
          format: int64
      - name: paperID
        in: path
        description: The ID of a paper to which to add the comment to
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
              description: Comment
              example: Some comment
        required: true
      responses:
        "500":
          description: Internal Server Error. An unexpected server error occurred.
        "201":
          description: Success. A discussion comment was appended to the review.
        "404":
          description: Not Found. The requested paper or reviewer was not found.
        "403":
          description: Forbidden. The requester is not a valid chair or reviewer.
  /papers/{paperID}/assignees/{reviewerID}:
    post:
      tags:
      - Assignments
      summary: Manually assign reviewers
      description: Manually assigns reviewer to a specific paper.At least 3 reviewers
        must be assigned to a paper.
      operationId: assignManual
      parameters:
      - name: requesterID
        in: query
        description: The ID of a user making the request
        required: true
        schema:
          type: integer
          format: int64
      - name: reviewerID
        in: path
        description: The ID of a user to assign as a reviewer
        required: true
        schema:
          type: integer
          format: int64
      - name: paperID
        in: path
        description: The ID of a paper to assign
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "500":
          description: Internal Server Error. An unexpected server error occurred.
        "201":
          description: Reviewer successfully assigned to the paper.
        "403":
          description: Forbidden. You are not allowed to assign reviewers. Only chairs
            for track can do that
        "404":
          description: Not Found. The specified paper or user does not exist.
        "409":
          description: Conflict. There is a Conflict of Interest and the reviewer
            cannot review this paper; or the reviewer has already been assigned to
            this paper.
    delete:
      tags:
      - Assignments
      summary: Removes a reviewer from a paper
      description: Removes a reviewer previously assigned to a paper.
      operationId: remove
      parameters:
      - name: requesterID
        in: query
        description: The ID of a user making the request
        required: true
        schema:
          type: integer
          format: int64
      - name: paperID
        in: path
        description: The ID of a paper reviewer belongs to
        required: true
        schema:
          type: integer
          format: int64
      - name: reviewerID
        in: path
        description: The ID of a reviewer to remove
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: "Not Found. The specified paper or user does not exist, or\
            \ the user is not assigned to this paper."
        "500":
          description: Internal Server Error. An unexpected server error occurred.
        "403":
          description: Forbidden. You are not allowed to remove a reviewer. Only chairs
            can do that.
        "200":
          description: Successfully removed the reviewer for this paper.
  /conferences/{conferenceID}/tracks/{trackID}/finalization:
    post:
      tags:
      - Assignments
      summary: Finalise reviewers
      description: "Finalises the assignment of reviewers, so they can no longer be\
        \ changed manually or automatically. "
      operationId: finalization_1
      parameters:
      - name: requesterID
        in: query
        description: The ID of the user making the request
        required: true
        schema:
          type: integer
          format: int64
      - name: conferenceID
        in: path
        description: The ID of the conference the track belongs to
        required: true
        schema:
          type: integer
          format: int64
      - name: trackID
        in: path
        description: The ID of the track for which the assignments should be finalized
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "201":
          description: Reviewers has been successfully finalized to this paper.
        "500":
          description: Internal Server Error. An unexpected server error occurred.
        "403":
          description: Forbidden. You are not allowed to finalize the assignments.
            You must be a chair of the track.
        "409":
          description: Conflict. There must be at least 3 reviewers assigned to each
            paper to finalize the assignments.
        "404":
          description: Not Found. The specified paper or user does not exist.
  /papers/{paperID}/title-and-abstract:
    get:
      tags:
      - Papers
      summary: Get the title and abstract of a paper
      description: 'Responds with the title and abstract of the given paper. '
      operationId: getTitleAndAbstract
      parameters:
      - name: requesterID
        in: query
        description: The ID of a user making the request
        required: true
        schema:
          type: integer
          format: int64
      - name: paperID
        in: path
        description: The ID of a paper to return
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "403":
          description: Forbidden. The requester must be a reviewer or chair for the
            track the paper is in.
        "500":
          description: Internal Server Error. An unexpected server error occurred.
        "404":
          description: Not Found. The requested paper was not found.
        "200":
          description: Successful retrieval of paper title and abstract
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaperSummary'
  /papers/{paperID}/status:
    get:
      tags:
      - Papers
      summary: Get the review status of a paper
      description: "Responds with whether the paper has been accepted or rejected,\
        \ or if it hasn't been decided yet."
      operationId: getState
      parameters:
      - name: requesterID
        in: query
        description: The ID of a user making the request
        required: true
        schema:
          type: integer
          format: int64
      - name: paperID
        in: path
        description: The ID of a paper to check status
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "500":
          description: Internal Server Error. An unexpected server error occurred.
        "404":
          description: Not Found. The requested paper was not found.
        "403":
          description: "Forbidden. The requester must be an author of the paper, a\
            \ chair of the paper's track, or a reviewer assigned to the paper."
        "200":
          description: Successful retrieval of the paper review status
          content:
            application/json:
              schema:
                type: string
                description: "The review status of the paper.\n\nACCEPTED: The paper\
                  \ has been accepted.\n\nREJECTED: The paper has been rejected.\n\
                  \nNOT_DECIDED: The review process has hot finished yet."
                enum:
                - ACCEPTED
                - REJECTED
                - NOT_DECIDED
  /papers/{paperID}/reviews/phase:
    get:
      tags:
      - Reviews
      summary: Get the review phase of a paper
      description: Responds with how far along a paper is in the review process. Each
        paper whithin a track has its own phase. For more information check the description
        of the returned enum.
      operationId: getPhase
      parameters:
      - name: requesterID
        in: query
        description: The ID of a user making the request
        required: true
        schema:
          type: integer
          format: int64
      - name: paperID
        in: path
        description: The ID of the paper
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "500":
          description: Internal Server Error. An unexpected server error occurred.
        "403":
          description: "Forbidden. The requester must be a chair of the track the\
            \ paper is in, or a reviewer assigned to that paper."
        "404":
          description: Not Found. The requested paper was not found.
        "200":
          description: Successful retrieval of the paper review phase
          content:
            application/json:
              schema:
                type: string
                description: "Exactly how far along a paper is in the review process\n\
                  \nBEFORE_REVIEW: Before the Review phase of the track the paper\
                  \ is in\n\nIN_REVIEW: The reviewers all need to submit a review.\
                  \ Once that happens the discussion phase for the paper automatically\
                  \ starts.\n\nIN_DISCUSSION: The reviewers can now see each others\
                  \ reviews and comment on them. If all of the reviews are either\
                  \ positive or negative, the chair of the track can finalize the\
                  \ reviews which automatically puts the paper into the REVIEW phase.\n\
                  \nREVIEWED: The reviews cannot be changed now. Once all of the papers\
                  \ in a track are REVIEWED, the track goes into the final phase and\
                  \ the reviews can be viewed by the authors."
                enum:
                - BEFORE_REVIEW
                - IN_REVIEW
                - IN_DISCUSSION
                - REVIEWED
  /papers/{paperID}/reviews/by-reviewer/{reviewerID}:
    get:
      tags:
      - Reviews
      summary: Gets a review
      description: "Responds with the review of a specific paper (paperID), reviewed\
        \ by user (userID). Confidential comments will not be revealed if the requester\
        \ is the author of the paper."
      operationId: read
      parameters:
      - name: requesterID
        in: query
        description: The ID of a user making the request
        required: true
        schema:
          type: integer
          format: int64
      - name: reviewerID
        in: path
        description: The ID of a reviewer in charge of this paper
        required: true
        schema:
          type: integer
          format: int64
      - name: paperID
        in: path
        description: The ID of the paper
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "500":
          description: Internal Server Error. An unexpected server error occurred.
        "200":
          description: Successful retrieval of the review
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
        "404":
          description: Not Found. The requested paper or reviewer was not found.
        "403":
          description: "Forbidden. The requester must be a reviewer for this paper,\
            \ a chair of the track the paper is in, or an author of the paper (in\
            \ that case, the reviews for the track the paper is in must all be finalized,\
            \ and only then they can be revealed to authors)."
  /papers/{paperID}/reviewers:
    get:
      tags:
      - Reviews
      summary: Get the list of a reviewers for a given paper
      description: Responds with list of reviewers' IDs assigned to that paper.
      operationId: getReviewers
      parameters:
      - name: requesterID
        in: query
        description: The ID of the user making the request
        required: true
        schema:
          type: integer
          format: int64
      - name: paperID
        in: path
        description: The ID of the paper
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "500":
          description: Internal Server Error. An unexpected server error occurred.
        "200":
          description: Successful retrieval of the list of reviewers
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
                  format: int64
        "403":
          description: "Forbidden. The requester must be a chair of the track that\
            \ the paper is in, or a reviewer also assigned to the given paper."
        "404":
          description: Not Found. The requested paper was not found.
  /papers/{paperID}/bids/by-reviewer/{reviewerID}:
    get:
      tags:
      - Bids
      summary: Get the bid of a given reviewer for a given paper
      description: "Responds with a bid (a preference to review or not review a paper,\
        \ based on expertise level, submitted by the reviewers) of the given reviewer\
        \ for reviewing the given paper. The requester must be the reviewer themselves,\
        \ or a chair of the track the paper is in."
      operationId: getBidForPaperByReviewer
      parameters:
      - name: requesterID
        in: query
        description: The ID of a user making the request
        required: true
        schema:
          type: integer
          format: int64
      - name: paperID
        in: path
        description: The ID of the paper
        required: true
        schema:
          type: integer
          format: int64
      - name: reviewerID
        in: path
        description: The the ID of the reviewer of the paper
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "500":
          description: Internal Server Error. An unexpected server error occurred.
        "403":
          description: "Forbidden, you are not allowed to view bids. Only the chairs\
            \ of the tracks and the bid submitter are allowed to do that."
        "404":
          description: "Not found, the specified bid does not exist"
        "200":
          description: Successfully accessed the bids for paper by given reviewer
          content:
            application/json:
              schema:
                type: string
                description: Specifies a preference by the reviewer to review / not
                  review a paper (based on their expertise)
                enum:
                - CAN_REVIEW
                - NEUTRAL
                - NOT_REVIEW
  /papers/{paperID}/assignees:
    get:
      tags:
      - Assignments
      summary: Get current assignments for a paper
      description: Responds with a list of reviewer IDs for a specific paper.
      operationId: assignments
      parameters:
      - name: requesterID
        in: query
        description: The ID of a user making the request
        required: true
        schema:
          type: integer
          format: int64
      - name: paperID
        in: path
        description: The ID of a paper assignments belong to
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "500":
          description: Internal Server Error. An unexpected server error occurred.
        "200":
          description: Successfully returned the list of reviewers assigned to this
            paper.
        "403":
          description: Forbidden. You are not allowed to view the reviewers. Only
            a chair or a reviewer in this track can do that
        "404":
          description: Not Found. The specified paper or user does not exist.
  /papers/{paperID}:
    get:
      tags:
      - Papers
      summary: Get the whole paper without the author names
      description: 'Responds all the contents of a paper submission. Excludes the
        names and credentials of the author. '
      operationId: get
      parameters:
      - name: requesterID
        in: query
        description: The ID of a user making the request
        required: true
        schema:
          type: integer
          format: int64
      - name: paperID
        in: path
        description: The ID of a paper to return
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "500":
          description: Internal Server Error. An unexpected server error occurred.
        "403":
          description: "Forbidden. The requester must be: a chair of the track the\
            \ paper is in; or a reviewer who has been assigned to the given paper\
            \ (the review phase for the paper must have started)."
        "404":
          description: Not Found. The requested paper was not found.
        "200":
          description: Successful retrieval of the complete paper
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Paper'
  /papers/by-reviewer:
    get:
      tags:
      - Reviews
      - Assignments
      summary: Gets all papers a reviewer (the requester) is assigned to.
      description: Responds with a list of papers a user is assigned to in all tracks.
        This endpoint can be called by any reviewer.
      operationId: getAssignedPapers
      parameters:
      - name: requesterID
        in: query
        description: The ID of the user making the request.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaperSummaryWithID'
        "500":
          description: Internal Server Error. An unexpected server error occurred.
        "404":
          description: Not Found. Such user does not exist
  /conferences/{conferenceID}/tracks/{trackID}/phase:
    get:
      tags:
      - Conference Tracks
      summary: Get the review phase
      description: Responds with the review phase of the track. Consult with the documentation
        of the returned enum for more information.
      operationId: getPhase_1
      parameters:
      - name: requesterID
        in: query
        description: The ID of the user making the request.
        required: true
        schema:
          type: integer
          format: int64
      - name: conferenceID
        in: path
        description: The ID of the conference the track is in.
        required: true
        schema:
          type: integer
          format: int64
      - name: trackID
        in: path
        description: The ID of the track.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "500":
          description: Internal Server Error. An unexpected server error occurred.
        "200":
          description: Successful pull of the review phase
          content:
            application/json:
              schema:
                type: string
                description: "Phases of the review process for a track.\n\nSUBMITTING:\
                  \ The review process hasn't started. Papers are still being submitted.\n\
                  \nBIDDING: Papers cannot be submitted now. Reviewers can bid on\
                  \ the papers, to indicate their expertise level. Ends after the\
                  \ bidding deadline for the track passes.\n\nASSIGNING: Chairs of\
                  \ the track can now assign papers to reviewers in the track.\n\n\
                  REVIEWING: Reviewing process. During this phase, the papers in the\
                  \ track are either in Review or in Discussion.\n\nFINAL: The reviews\
                  \ for all of the papers in the track have been finalized. They are\
                  \ now accessible to authors."
                enum:
                - SUBMITTING
                - BIDDING
                - ASSIGNING
                - REVIEWING
                - FINAL
        "403":
          description: "Forbidden. The requester must be a chair of the track, or\
            \ a reviewer in the track."
        "404":
          description: Not Found. The requested track or conference were not found.
  /conferences/{conferenceID}/tracks/{trackID}/papers:
    get:
      tags:
      - Conference Tracks
      summary: Get the papers for track
      description: Returns all the papers in the given track of a conference. You
        can request the full paper from another api point.
      operationId: getPapers
      parameters:
      - name: requesterID
        in: query
        description: The ID of a user making the request
        required: true
        schema:
          type: integer
          format: int64
      - name: conferenceID
        in: path
        description: The ID of a conference
        required: true
        schema:
          type: integer
          format: int64
      - name: trackID
        in: path
        description: The ID of a track
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Not Found. The requested track or conference was not found.
        "500":
          description: Internal Server Error. An unexpected server error occurred.
        "403":
          description: Forbidden. The requester must be a chair of the track or a
            reviewer in the track.
        "200":
          description: Successful retrieval of papers in given track of given conference
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaperSummaryWithID'
  /conferences/{conferenceID}/tracks/{trackID}/analytics:
    get:
      tags:
      - Conference Tracks
      summary: Get the summary stats of a track
      description: "Returns the numbers of accepted, rejected and not-yet-decided\
        \ papers."
      operationId: getAnalytics
      parameters:
      - name: requesterID
        in: query
        description: The ID of a user making the request
        required: true
        schema:
          type: integer
          format: int64
      - name: conferenceID
        in: path
        description: The ID of a conference
        required: true
        schema:
          type: integer
          format: int64
      - name: trackID
        in: path
        description: The ID of a track
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "500":
          description: Internal Server Error. An unexpected server error occurred.
        "403":
          description: Forbidden. The requester has to be a chair of the track.
        "404":
          description: Not Found. The requested track was not found.
        "200":
          description: Successful retrieval of track summary stats
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackAnalytics'
components:
  schemas:
    Review:
      type: object
      properties:
        confidenceScore:
          type: string
          description: The confidence score of the reviewer
          example: EXPERT
          enum:
          - EXPERT
          - KNOWLEDGEABLE
          - BASIC
        commentForAuthor:
          type: string
          description: The comment of the author
          example: Good job!
        confidentialComment:
          type: string
          description: Confidential comments for others involved in the review process.
            Will be null if sent to an author.
        recommendationScore:
          type: string
          description: Then recommendation score for the paper
          enum:
          - STRONG_REJECT
          - WEAK_REJECT
          - WEAK_ACCEPT
          - STRONG_ACCEPT
      description: The review that the requester wants to submit
    PaperSummary:
      type: object
      properties:
        title:
          type: string
          description: The title of the paper
          example: Tails of frogs
        abstractSection:
          type: string
          description: The abstract of the paper
          example: Some sample abstract
      description: Includes the title and abstract of a paper for use during the Bidding
        process
    DiscussionComment:
      type: object
      properties:
        commenterID:
          type: integer
          description: The ID of the commenter
          format: int64
          example: 1
        comment:
          type: string
          description: A confidential comment for other reviewers
          example: Some comment
      description: Discussion comment - it can only be seen by the reviewers and chairs
        and not authors.
    BidByReviewer:
      type: object
      properties:
        bidderID:
          type: integer
          description: The ID of the bidder
          format: int64
          example: 1
        bid:
          type: string
          description: Specifies a preference by the reviewer to review / not review
            a paper (based on their expertise)
          enum:
          - CAN_REVIEW
          - NEUTRAL
          - NOT_REVIEW
      description: The bid that a reviewer has made
    Paper:
      type: object
      properties:
        title:
          type: string
          description: The title of the paper
          example: Tails of frogs
        abstractSection:
          type: string
          description: The abstract of the paper
          example: Some sample abstract
        keywords:
          type: array
          description: Main keywords of the paper
          items:
            type: string
            description: Main keywords of the paper
        mainText:
          type: string
          description: The paper itself
          example: Full text of the paper
        replicationPackageLink:
          type: string
          description: The link to replication package
          example: https://localhost/paper
      description: The full contents of a submitted paper. Doesn't include the author
        names.
    PaperSummaryWithID:
      type: object
      properties:
        paperID:
          type: integer
          description: The ID of the paper
          format: int64
          example: 2
        title:
          type: string
          description: The title of the paper
          example: Tails of frogs
        abstractSection:
          type: string
          description: The abstract of the paper
          example: Some sample abstract
      description: "Includes the title, abstract and ID of a paper"
    TrackAnalytics:
      type: object
      properties:
        accepted:
          type: integer
          description: Number of accepted papers
          format: int32
          example: 0
        rejected:
          type: integer
          description: Number of rejected papers
          format: int32
          example: 1
        unknown:
          type: integer
          description: Number of papers that are not yet decided
          format: int32
          example: 2
      description: "Counts of accepted, rejected and unknown papers"
